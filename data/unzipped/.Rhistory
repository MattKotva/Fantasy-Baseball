second_points <- 0
third_points <- 0
if(data_row['Runner_On_First_Destination'] == 4) {
first_points <- first_points + 2
}
if(data_row['Runner_On_Second_Destination'] == 4) {
second_points <- second_points + 2
}
if(data_row['Runner_On_Third_Destination'] == 4) {
third_points <- third_points + 2
}
if(data_row['Stolen_Base_Runner_On_First'] == TRUE) {
first_points <- first_points + 5
}
View(all2016_scored)
all2016_scored[220,]
all2016[220,]
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First'] == TRUE
if(data_row['Stolen_Base_Runner_On_First'] == TRUE) {
first_points <- first_points + 5
}
getPoints <- function(data_row){
# Relevant players
hitter <- data_row['BAT_ID']
first <- data_row['Runner_On_First']
second <- data_row['Runner_On_Second']
third <- data_row['Runner_On_Third']
# Score hitter
hit <- data_row['Hit_Value']
rbi <- data_row['RBI_On_Play']
walk <- data_row['Event_Type'] == 14
hbp <- data_row['Event_Type'] == 16
hitter_points <- scoreHit(hit, rbi,walk, hbp)
# Score players on base
first_points <- 0
second_points <- 0
third_points <- 0
if(data_row['Runner_On_First_Destination'] == 4) {
first_points <- first_points + 2
}
if(data_row['Runner_On_Second_Destination'] == 4) {
second_points <- second_points + 2
}
if(data_row['Runner_On_Third_Destination'] == 4) {
third_points <- third_points + 2
}
if(data_row['Stolen_Base_Runner_On_First'] == TRUE) {
first_points <- first_points + 5
}
if(data_row['Stolen_Base_Runner_On_Second'] == TRUE) {
second_points <- second_points + 5
}
if(data_row['Stolen_Base_Runner_On_Third'] == TRUE) {
third_points <- third_points + 5
}
all_points <- list(hitter_points, first_points, second_points, third_points)
return(all_points)
}
scoreHit <- function(hit, rbi, walk, hbp){
points <- 0
if (hit == 0) {
points <- points + 0
} else if (hit == 1) {
points <- points + 3
} else if (hit == 2) {
points <- points + 5
} else if (hit == 3) {
points <- points + 8
} else if (hit == 4) {
points <- points + 12
}
rbi_points <- 2*as.integer(rbi)
points <- points + rbi_points
if (walk || hbp) {
points <- points + 2
}
return(points)
}
two <- apply(X = all2016,MARGIN = 1, FUN = getPoints)
pointsdf <- data.frame(do.call(rbind, two))
names(pointsdf) <- c("Batter_Points", "Runner_On_First_Points",
"Runner_On_Second_Points", "Runner_On_Third_Points")
max(pointsdf$Runner_On_First_Points)
pointsdf$Runner_On_First_Points <- unlist(pointsdf$Runner_On_First_Points)
max(pointsdf$Runner_On_First_Points)
hitter <- data_row['BAT_ID']
first <- data_row['Runner_On_First']
second <- data_row['Runner_On_Second']
third <- data_row['Runner_On_Third']
hit <- data_row['Hit_Value']
rbi <- data_row['RBI_On_Play']
walk <- data_row['Event_Type'] == 14
hbp <- data_row['Event_Type'] == 16
hitter_points <- scoreHit(hit, rbi,walk, hbp)
first_points <- 0
second_points <- 0
third_points <- 0
if(data_row['Runner_On_First_Destination'] == 4) {
first_points <- first_points + 2
}
if(data_row['Runner_On_Second_Destination'] == 4) {
second_points <- second_points + 2
}
if(data_row['Runner_On_Third_Destination'] == 4) {
third_points <- third_points + 2
}
if(data_row['Stolen_Base_Runner_On_First'] == TRUE) {
first_points <- first_points + 5
}
if(data_row['Stolen_Base_Runner_On_Second'] == TRUE) {
second_points <- second_points + 5
}
if(data_row['Stolen_Base_Runner_On_Third'] == TRUE) {
third_points <- third_points + 5
}
all_points <- list(hitter_points, first_points, second_points, third_points)
two <- apply(X = all2016,MARGIN = 1, FUN = getPoints)
two[[220]]
test <- getPoints(data_row = all2016[220,])
test
apply(X = all2016[220,], MARGIN = 1, FUN = getPoints)
two <- apply(X = all2016,MARGIN = 1, FUN = getPoints)
two[[220]]
apply(X = all2016[118:222,], MARGIN = 1, FUN = getPoints)
all2016[222,]
getPoints <- function(data_row){
# Relevant players
hitter <- data_row['BAT_ID']
first <- data_row['Runner_On_First']
second <- data_row['Runner_On_Second']
third <- data_row['Runner_On_Third']
# Score hitter
hit <- data_row['Hit_Value']
rbi <- data_row['RBI_On_Play']
walk <- data_row['Event_Type'] == 14
hbp <- data_row['Event_Type'] == 16
hitter_points <- scoreHit(hit, rbi,walk, hbp)
# Score players on base
first_points <- 0
second_points <- 0
third_points <- 0
if(data_row['Runner_On_First_Destination'] == 4) {
first_points <<- first_points + 2
}
if(data_row['Runner_On_Second_Destination'] == 4) {
second_points <<- second_points + 2
}
if(data_row['Runner_On_Third_Destination'] == 4) {
third_points <<- third_points + 2
}
if(data_row['Stolen_Base_Runner_On_First'] == TRUE) {
first_points <<- first_points + 5
}
if(data_row['Stolen_Base_Runner_On_Second'] == TRUE) {
second_points <<- second_points + 5
}
if(data_row['Stolen_Base_Runner_On_Third'] == TRUE) {
third_points <<- third_points + 5
}
all_points <- list(hitter_points, first_points, second_points, third_points)
return(all_points)
}
apply(X = all2016[118:222,], MARGIN = 1, FUN = getPoints)
all2016[222,]
getPoints <- function(data_row){
# Relevant players
hitter <- data_row['BAT_ID']
first <- data_row['Runner_On_First']
second <- data_row['Runner_On_Second']
third <- data_row['Runner_On_Third']
# Score hitter
hit <- data_row['Hit_Value']
rbi <- data_row['RBI_On_Play']
walk <- data_row['Event_Type'] == 14
hbp <- data_row['Event_Type'] == 16
hitter_points <- scoreHit(hit, rbi,walk, hbp)
# Score players on base
first_points <- 0
second_points <- 0
third_points <- 0
if(data_row['Runner_On_First_Destination'] == 4) {
first_points <- first_points + 2
}
if(data_row['Runner_On_Second_Destination'] == 4) {
second_points <- second_points + 2
}
if(data_row['Runner_On_Third_Destination'] == 4) {
third_points <- third_points + 2
}
if(data_row['Stolen_Base_Runner_On_First'] == TRUE) {
first_points <- first_points + 5
}
if(data_row['Stolen_Base_Runner_On_Second'] == TRUE) {
second_points <- second_points + 5
}
if(data_row['Stolen_Base_Runner_On_Third'] == TRUE) {
third_points <- third_points + 5
}
all_points <- list(hitter_points, first_points, second_points, third_points)
return(all_points)
}
scoreHit <- function(hit, rbi, walk, hbp){
points <- 0
if (hit == 0) {
points <- points + 0
} else if (hit == 1) {
points <- points + 3
} else if (hit == 2) {
points <- points + 5
} else if (hit == 3) {
points <- points + 8
} else if (hit == 4) {
points <- points + 12
}
rbi_points <- 2*as.integer(rbi)
points <- points + rbi_points
if (walk || hbp) {
points <- points + 2
}
return(points)
}
apply(X = all2016[118:222,], MARGIN = 1, FUN = getPoints)
test <- getPoints(data_row = all2016[220,])
test <- getPoints(data_row = all2016[220,])
test
getPoints <- function(data_row){
# Relevant players
hitter <- data_row['BAT_ID']
first <- data_row['Runner_On_First']
second <- data_row['Runner_On_Second']
third <- data_row['Runner_On_Third']
# Score hitter
hit <- data_row['Hit_Value']
rbi <- data_row['RBI_On_Play']
walk <- data_row['Event_Type'] == 14
hbp <- data_row['Event_Type'] == 16
hitter_points <- scoreHit(hit, rbi,walk, hbp)
# Score players on base
first_points <- 0
second_points <- 0
third_points <- 0
# if(data_row['Runner_On_First_Destination'] == 4) {
#   first_points <- first_points + 2
# }
if(data_row['Runner_On_Second_Destination'] == 4) {
second_points <- second_points + 2
}
if(data_row['Runner_On_Third_Destination'] == 4) {
third_points <- third_points + 2
}
if(data_row['Stolen_Base_Runner_On_First'] == TRUE) {
first_points <- first_points + 5
}
if(data_row['Stolen_Base_Runner_On_Second'] == TRUE) {
second_points <- second_points + 5
}
if(data_row['Stolen_Base_Runner_On_Third'] == TRUE) {
third_points <- third_points + 5
}
all_points <- list(hitter_points, first_points, second_points, third_points)
return(all_points)
}
test <- getPoints(data_row = all2016[220,])
test
apply(X = all2016[118:222,], MARGIN = 1, FUN = getPoints)
nrow(pointsdf)
nrow(all2016)
debugSource('~/draftkings/evalPoints.R', echo=TRUE)
data_row['Runner_On_First_Destination']
data_row['Stolent_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First'] == FALSE
data_row['Stolen_Base_Runner_On_First'] == FALSE
data_row['Stolen_Base_Runner_On_First'] == FALSE
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
debugSource('~/draftkings/evalPoints.R', echo=TRUE)
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First'] == TRUE
data_row['Stolen_Base_Runner_On_First'] == as.logical(TRUE)
as.logical(data_row['Stolen_Base_Runner_On_First'])
typeof(all2016$Stolen_Base_Runner_On_First)
debugSource('~/draftkings/evalPoints.R', echo=TRUE)
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
data_row['Stolen_Base_Runner_On_First']
trimws(data_row['Stolen_Base_Runner_On_First'])
as.logical(trimws(data_row['Stolen_Base_Runner_On_First']))
Q
debugSource('~/draftkings/evalPoints.R', echo=TRUE)
getPoints <- function(data_row){
# Relevant players
hitter <- data_row['BAT_ID']
first <- data_row['Runner_On_First']
second <- data_row['Runner_On_Second']
third <- data_row['Runner_On_Third']
# Score hitter
hit <- data_row['Hit_Value']
rbi <- data_row['RBI_On_Play']
walk <- data_row['Event_Type'] == 14
hbp <- data_row['Event_Type'] == 16
hitter_points <- scoreHit(hit, rbi,walk, hbp)
# Score players on base
first_points <- 0
second_points <- 0
third_points <- 0
if(data_row['Runner_On_First_Destination'] == 4) {
first_points <- first_points + 2
}
if(data_row['Runner_On_Second_Destination'] == 4) {
second_points <- second_points + 2
}
if(data_row['Runner_On_Third_Destination'] == 4) {
third_points <- third_points + 2
}
if(as.logical(trimws(data_row['Stolen_Base_Runner_On_First'])) == TRUE) {
first_points <- first_points + 5
}
if(data_row['Stolen_Base_Runner_On_Second'] == TRUE) {
second_points <- second_points + 5
}
if(data_row['Stolen_Base_Runner_On_Third'] == TRUE) {
third_points <- third_points + 5
}
all_points <- list(hitter_points, first_points, second_points, third_points)
return(all_points)
}
apply(X = all2016[218:222,], MARGIN = 1, FUN = getPoints)
trimws(TRUE)
source('~/draftkings/evalPoints.R', echo=TRUE)
summary(all2016_scored)
install.packages("dyplyr")
install.packages("dplyr")
library(dplyr)
names(all2016_scored)
players <- all2016_scored %>%
select(BAT_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
sum(Batter_Points)
typeof(all2016_scored$Batter_Points)
players <- all2016_scored %>%
select(BAT_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total= sum(Batter_Points))
head(players)
View(table(players))
order(decreasing = T, players$total)
max(players$total)
which(max(players$total))
players[1401]
players[1401,]
which(players$total == max(players$total))
players[34,]
roster['Player_ID' == 'arenn001',]
which(roster$Player_ID == 'arenn001')
roster[458,]
p <- players[with(players, order(total))]
p <- players[with(players, order(total)),]
head(p)
p <- players[with(players, order(-total)),]
head(p)
names(roster)
player_score <- inner_join(p, roster, by = c("BAT_ID" = "Player_ID"))
View(player_score)
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total= sum(Batter_Points))
p <- players[with(players, order(-total)),]
player_score <- inner_join(p, roster, by = c("BAT_ID" = "Player_ID"))
View(player_score)
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total_points= sum(Batter_Points), total_games= count(GAME_ID))
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total_points= sum(Batter_Points), total_games= count(GAME_ID))
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total_points= sum(Batter_Points))
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total_points= sum(Batter_Points), total_games= unique(GAME_ID))
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total_points= sum(Batter_Points), total_games= length(unique(GAME_ID)))
p <- players[with(players, order(-total_points)),]
player_score <- inner_join(p, roster, by = c("BAT_ID" = "Player_ID"))
View(player_score)
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total_points= sum(Batter_Points), total_games= length(unique(GAME_ID),
average_points = total_points/total_games))
average_points <- players$total_points/players$total_games
player_score_average <- cbind(players, average_points)
View(player_score_average)
player_score_average <- cbind(p, average_points)
View(player_score_average)
player_score_average <- cbind(player_score, average_points)
average_points <- player_score$total_points/player_score$total_games
player_score_average <- cbind(player_score, average_points)
View(player_score_average)
typeof(players)
runner_scoring <- lapply(players$BAT_ID, function(x) {
runnerFirst <- which(all2016_scored$Runner_On_First == x)
runnerFirstPoints <- sum(all2016_scored[runnerFirst,])
return (runnerFirstPoints)
})
runner_scoring <- lapply(players$BAT_ID, function(x) {
runnerFirst <- which(as.character(all2016_scored$Runner_On_First) == as.character(x))
runnerFirstPoints <- sum(all2016_scored[runnerFirst,])
return (runnerFirstPoints)
})
head(all2016_scored$Runner_On_First)
runner_scoring <- lapply(players$BAT_ID, function(x) {
runnerFirst <- which(as.character(all2016_scored$Runner_On_First) == as.character(x))
runnerFirstPoints <- sum(all2016_scored[runnerFirst,]$Runner_On_First_Points)
return (runnerFirstPoints)
})
head(runner_scoring)
max(runner_scoring)
runner_scoring <- lapply(players$BAT_ID, function(x) {
runnerFirst <- which(as.character(all2016_scored$Runner_On_First) == as.character(x))
runnerFirstPoints <- sum(all2016_scored[runnerFirst,]$Runner_On_First_Points)
runnerSecond <- which(as.character(all2016_scored$Runner_On_Second) == as.character(x))
runnerSecondPoints <- sum(all2016_scored[runnerSecond,]$Runner_On_Second_Points)
runnerThird <- which(as.character(all2016_scored$Runner_On_Third) == as.character(x))
runnerThirdPoints <- sum(all2016_scored[runnerThird,]$Runner_On_Third_Points)
runnerPointsTotal <- runnerFirstPoints + runnerSecondPoints + runnerThirdPoints
return (runnerPointsTotal)
})
players <- cbind(players, runner_scoring)
p <- players[with(players, order(-total_points)),]
player_score <- inner_join(p, roster, by = c("BAT_ID" = "Player_ID"))
View(players)
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total_points= sum(Batter_Points), total_games= length(unique(GAME_ID)))
View(runner_scoring)
View(t(runner_scoring))
View(do.call(rbind,runner_scoring))
runner_scoring <- do.call(rbind, runner_scoring)
players <- cbind(players, runner_scoring)
p <- players[with(players, order(-total_points)),]
player_score <- inner_join(p, roster, by = c("BAT_ID" = "Player_ID"))
View(player_score)
players <- all2016_scored %>%
select(BAT_ID, GAME_ID, Batter_Points) %>%
group_by(BAT_ID) %>%
summarise(total_points_hitting= sum(Batter_Points), total_games= length(unique(GAME_ID)))
runner_scoring <- lapply(players$BAT_ID, function(x) {
runnerFirst <- which(as.character(all2016_scored$Runner_On_First) == as.character(x))
runnerFirstPoints <- sum(all2016_scored[runnerFirst,]$Runner_On_First_Points)
runnerSecond <- which(as.character(all2016_scored$Runner_On_Second) == as.character(x))
runnerSecondPoints <- sum(all2016_scored[runnerSecond,]$Runner_On_Second_Points)
runnerThird <- which(as.character(all2016_scored$Runner_On_Third) == as.character(x))
runnerThirdPoints <- sum(all2016_scored[runnerThird,]$Runner_On_Third_Points)
runnerPointsTotal <- runnerFirstPoints + runnerSecondPoints + runnerThirdPoints
return (runnerPointsTotal)
})
runner_scoring <- do.call(rbind, runner_scoring)
players <- cbind(players, runner_scoring)
totalPoints <- players$total_points_hitting + players$runner_scoring
players <- cbind(players, totalPoints)
p <- players[with(players, order(-total_points)),]
p <- players[with(players, order(-totalPoints)),]
player_score <- inner_join(p, roster, by = c("BAT_ID" = "Player_ID"))
View(player_score)
x <- "encae001"
runnerFirst <- which(as.character(all2016_scored$Runner_On_First) == as.character(x))
runnerFirstPoints <- sum(all2016_scored[runnerFirst,]$Runner_On_First_Points)
runnerFirstPoints
runnerSecond <- which(as.character(all2016_scored$Runner_On_Second) == as.character(x))
runnerSecondPoints <- sum(all2016_scored[runnerSecond,]$Runner_On_Second_Points)
runnerSecondPoints
runnerThird <- which(as.character(all2016_scored$Runner_On_Third) == as.character(x))
runnerThirdPoints <- sum(all2016_scored[runnerThird,]$Runner_On_Third_Points)
runnerPointsTotal <- runnerFirstPoints + runnerSecondPoints + runnerThirdPoints
runnerThirdPoints
runnerPointsTotal
nrow(runnerFirst)
length(runnerFirst)
average_points <- player_score$totalPoints/player_score$total_games
player_score_average <- cbind(player_score, average_points)
View(player_score_average)
p <- player_score_average[with(player_score_average, order(-average_points))]
names(player_score_average)
p <- player_score_average[with(player_score_average, order(-average_points)),]
View(p)
p <- filter(player_score_average, totalPoints > 75)
p <- p[with(p, order(-average_points)),]
View(p)
p <- filter(player_score_average, total_games > 30)
p <- p[with(p, order(-average_points)),]
View(p)
